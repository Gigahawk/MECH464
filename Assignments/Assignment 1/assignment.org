#+TITLE: MECH 464 Homework Assignment 1
#+AUTHOR: Jasper Chan - 37467164 @@latex:\\@@ jasperchan515@gmail.com

#+OPTIONS: toc:nil H:5 num:t


#+LATEX_HEADER: \definecolor{bg}{rgb}{0.95,0.95,0.95}
#+LATEX_HEADER: \setminted{frame=single,bgcolor=bg,samepage=true}
#+LATEX_HEADER: \setlength{\parindent}{0pt}
#+LATEX_HEADER: \sisetup{per-mode=fraction}
#+LATEX_HEADER: \usepackage[shellescape]{gmp}
#+LATEX_HEADER: \usepackage{gauss}
#+LATEX_HEADER: \usepackage{float}
#+LATEX_HEADER: \usepackage[inkscapearea=page/nocrop]{svg}
#+LATEX_HEADER: \usepackage{cancel}
#+LATEX_HEADER: \usepackage{amssymb}
#+LATEX_HEADER: \usepackage{titlesec}
#+LATEX_HEADER: \usepackage{mathtools, nccmath}
#+LATEX_HEADER: \newcommand{\Lwrap}[1]{\left\{#1\right\}}
#+LATEX_HEADER: \newcommand{\Lagr}[1]{\mathcal{L}\Lwrap{#1}}
#+LATEX_HEADER: \newcommand{\Lagri}[1]{\mathcal{L}^{-1}\Lwrap{#1}}
#+LATEX_HEADER: \newcommand{\Ztrans}[1]{\mathcal{Z}\Lwrap{#1}}
#+LATEX_HEADER: \newcommand{\Ztransi}[1]{\mathcal{Z}^{-1}\Lwrap{#1}}
#+LATEX_HEADER: \newcommand{\ZOH}[1]{\text{ZOH}\left(#1\right)}
#+LATEX_HEADER: \DeclarePairedDelimiter{\ceil}{\lceil}{\rceil}
#+LATEX_HEADER: \makeatletter \AtBeginEnvironment{minted}{\dontdofcolorbox} \def\dontdofcolorbox{\renewcommand\fcolorbox[4][]{##4}} \makeatother
#+LATEX_HEADER:\titleformat{\paragraph}[hang]{\normalfont\normalsize\bfseries}{\theparagraph}{1em}{}
#+LATEX_HEADER:\titlespacing*{\paragraph}{0pt}{3.25ex plus 1ex minus .2ex}{0.5em}
#+LATEX_HEADER: \setcounter{secnumdepth}{5}


* Exercise 1
Find, by hand, the eigenvalues and eigenvectors of $A$ as well as $e^{At}$ for

\begin{equation*}
A = 
\begin{bmatrix}
0      & -\omega & 0 \\
\omega & 0       & 0 \\
0      & 0       & 0
\end{bmatrix}
\end{equation*}

** Solution
*** Eigenvalues and Eivenvectors
Let's find the eigenvalues $\lambda$ by solving $|A - \lambda \mathbf{I}| = 0$

\begin{align*}
0 &= |A - \lambda \mathbf{I}| \\
&=
\begin{vmatrix}
-\lambda & -\omega  & 0 \\
\omega   & -\lambda & 0 \\
0        & 0        & -\lambda
\end{vmatrix} \\
&=
\left[
    (-\lambda)(-\lambda)(-\lambda)
    + (-\omega)(0)(0)
    + (0)(\omega)(0)
\right]
-
\left[
    (0)(-\lambda)(0)
    + (-\lambda)(0)(0)
    + (-\omega)(\omega)(-\lambda)
\right] \\
&=
\left[
    -\lambda^3
\right]
-
\left[
    \lambda\omega^2
\right] \\
&=
-\lambda\left(\lambda^2 + \omega^2\right)
\end{align*}
The eigenvalues are then:
\begin{align*}
\lambda_1 &= 0 &
\lambda_2 &= -\omega j &
\lambda_3 &= \omega j
\end{align*}

Now we can use row reduction to solve for each eigenvector

**** $\lambda_1 = 0$
\begin{align*}
A - \lambda_1\mathbf{I} &= A \\
&=
\begin{gmatrix}[b]
0      & -\omega & 0 \\
\omega & 0       & 0 \\
0      & 0       & 0
\rowops
  \mult{0}{/-\omega}
  \mult{1}{/\omega}
\end{gmatrix}
\Rightarrow
\begin{gmatrix}[b]
0 & 1 & 0 \\
1 & 0 & 0 \\
0 & 0 & 0
\end{gmatrix}
\end{align*}

\begin{align*}
a_{e_1} &= 0 &
b_{e_1} &= 0 &
c_{e_1} &= 1 \\
&&
\underbar{e}_1 &=
\begin{bmatrix}
0 \\ 0 \\ 1
\end{bmatrix}
\end{align*}
**** $\lambda_2 = -\omega j$
\begin{align*}
A - \lambda_2\mathbf{I}
&=
\begin{gmatrix}[b]
\omega j & -\omega  & 0 \\
\omega   & \omega j & 0 \\
0        & 0        & \omega j
\rowops
  \mult{0}{/\omega}
  \mult{1}{/\omega}
  \mult{2}{/\omega j}
  \mult{0}{\cdot j}
  \add[1]{1}{0}
\end{gmatrix}
\Rightarrow
\begin{gmatrix}[b]
0 & 0 & 0 \\
1 & j & 0 \\
0 & 0 & 1
\end{gmatrix}
\end{align*}

\begin{align*}
a_{e_2} &= -j &
b_{e_2} &= 1 &
c_{e_2} &= 0 \\
&&
\underbar{e}_2 &=
\begin{bmatrix}
-j \\ 1 \\ 0
\end{bmatrix}
\end{align*}

**** $\lambda_3 = \omega j$

We know the third eigenvector should be the complex conjugate of the second, however let's prove this:

\begin{align*}
A - \lambda_3\mathbf{I}
&=
\begin{gmatrix}[b]
-\omega j & -\omega   & 0 \\
 \omega   & -\omega j & 0 \\
 0        & 0         & -\omega j
\rowops
  \mult{0}{/-\omega}
  \mult{1}{/\omega}
  \mult{2}{/-\omega j}
  \mult{1}{\cdot j}
  \add[-1]{0}{1}
\end{gmatrix}
\Rightarrow
\begin{gmatrix}[b]
j & 1 & 0 \\
0 & 0 & 0 \\
0 & 0 & 1
\end{gmatrix}
\end{align*}

\begin{align*}
a_{e_3} &= j &
b_{e_3} &= 1 &
c_{e_3} &= 0 \\
&&
\underbar{e}_3 &=
\begin{bmatrix}
j \\ 1 \\ 0
\end{bmatrix}
\end{align*}

**** Answer Checking
Using MATLAB to check our work:

#+begin_src matlab :session :exports both :results code output
syms omega t;
A = [0 -omega 0; omega 0 0; 0 0 0]
[e, lambda] = eig(A)
#+end_src

#+RESULTS:
#+begin_src matlab
A =
 
[    0, -omega, 0]
[omega,      0, 0]
[    0,      0, 0]
 
 
e =
 
[0, -1i, 1i]
[0,   1,  1]
[1,   0,  0]
 
 
lambda =
 
[0,         0,        0]
[0, -omega*1i,        0]
[0,         0, omega*1i]
#+end_src

*** $e^{At}$
Looking at $A$, we notice that $A = \omega(k\times)$.
From the lecture slides, we can infer that
\begin{equation*}
e^{At}
=
\begin{bmatrix}
\cos{\omega t} & -\sin{\omega t} & 0 \\
\sin{\omega t} & \cos{\omega t}  & 0 \\
0              & 0               & 1
\end{bmatrix}
\end{equation*}

However, let's show this more rigorously.

$e^{At}$ is defined as the solution to $\dot{X} = AX, X(0) = I$.

We can solve for $X$ with the Laplace transform $\hat{X}(s) \triangleq \Lagr{X(t)}$:
\begin{align*}
\dot{X} &= AX \\
s\hat{X} - X(0) &= A\hat{X} \\
\hat{X} &= (sI - A)^{-1} \\
X &= \Lagri{(sI - A)^{-1}} \\
&=
\Lagri{
    \begin{bmatrix}
    s       & \omega & 0 \\
    -\omega & s      & 0 \\
    0       & 0      & s
    \end{bmatrix}^{-1}
}\\
&=
\Lagri{
    \frac{1}{|A|}
    \operatorname{adj}(A)
}\\
&=
\Lagri{
    \frac{1}{s^3 + \omega^2 s}
    \operatorname{adj}(A)
}\\
&=
\Lagri{
    \frac{1}{s^3 + \omega^2 s}
    \begin{bmatrix}
        +
        \begin{vmatrix}
        s & 0 \\
        0 & s
        \end{vmatrix}
        &
        -
        \begin{vmatrix}
        -\omega & 0 \\
        0       & s
        \end{vmatrix}
        &
        +
        \begin{vmatrix}
        -\omega & s \\
        0       & 0
        \end{vmatrix}
        \\
        -
        \begin{vmatrix}
        \omega & 0 \\
        0      & s
        \end{vmatrix}
        &
        +
        \begin{vmatrix}
        s & 0 \\
        0 & s
        \end{vmatrix}
        &
        -
        \begin{vmatrix}
        s & \omega \\
        0 & 0
        \end{vmatrix}
        \\
        +
        \begin{vmatrix}
        \omega & 0 \\
        s      & 0
        \end{vmatrix}
        &
        -
        \begin{vmatrix}
        s       & 0 \\
        -\omega & 0
        \end{vmatrix}
        &
        +
        \begin{vmatrix}
        s       & \omega \\
        -\omega & s
        \end{vmatrix}
    \end{bmatrix}^T
}\\
&=
\Lagri{
    \frac{1}{s^3 + \omega^2 s}
    \begin{bmatrix}
        s^2       & \omega s & 0 \\
        -\omega s & s^2      & 0 \\
        0         & 0        & s^2 + \omega^2
    \end{bmatrix}^T
}\\
&=
\Lagri{
    \begin{bmatrix}
        \frac{s}{s^2 + \omega^2} &
        \frac{\omega}{s^2 + \omega^2} &
        0 \\
        \frac{-\omega}{s^2 + \omega^2} &
        \frac{s}{s^2 + \omega^2} &
        0 \\
        0 &
        0 &
        \frac{1}{s} \\
    \end{bmatrix}^T
}\\
&=
\begin{bmatrix}
\cos{\omega t}  & \sin{\omega t} & 0 \\
-\sin{\omega t} & \cos{\omega t} & 0 \\
0               & 0              & 1
\end{bmatrix}^T \\
e^{At}
&=
\begin{bmatrix}
\cos{\omega t} & -\sin{\omega t} & 0 \\
\sin{\omega t} & \cos{\omega t}  & 0 \\
0              & 0               & 1
\end{bmatrix} \\
\end{align*}
**** Answer Checking
Using MATLAB to check our answers:

#+begin_src matlab :session :exports both :results code output
simplify(expm(A*t))
#+end_src

#+RESULTS:
#+begin_src matlab
ans =
 
[cos(omega*t), -sin(omega*t), 0]
[sin(omega*t),  cos(omega*t), 0]
[           0,             0, 1]
#+end_src

* Exercise 2
Find a general procedure to find the axis/angle representation of a rotation matrix $Q$.
Program it in MATLAB and verify it for a few examples.
Clearly describe your algorithm and hand in your Matlab code as well as the working examples

** Solution
Our function needs to take a parameter $Q$, and return axis coordinates $s$ and rotation angle $\theta$:
#+begin_src matlab :exports code :tangle rotmat2axisangle.m :eval never
function [s, theta] = rotmat2axisangle(Q)
#+end_src

To find $\theta$, we can use the eigenvalues of $Q$[fn:thetapos]:
\begin{align*}
\lambda
&\in
\{
  e^{j\theta},
  e^{-j\theta},
  1
\} \\
e^{j\theta} &= \lambda_1 \\
j\theta &= \log\lambda_1 \\
\forall \theta \in \mathbb{R}_{>0}, \theta &= \operatorname{Im}(\log\lambda_1)
\end{align*}

Implementing this:
#+begin_src matlab :exports code :tangle rotmat2axisangle.m :eval never
    lambdas = eig(Q);
    % Get eigenvalue with positive imaginary part
    thetas = imag(log(lambdas));
    theta = thetas(thetas > 0);
#+end_src

#+RESULTS:

Now that we have $\theta$, we can solve for $s\times$ by using the relation:
\begin{align*}
e^{\theta(s\times)}
&= 
Q \\
\theta(s\times)
&=
\log{Q} \\
s\times
&=
\frac{\log{Q}}{\theta}
\end{align*}

Implementing this:
#+begin_src matlab :exports code :tangle rotmat2axisangle.m :eval never
    sx = logm(Q)/theta;
#+end_src

We can then find the axis $s$ from the definition of the skew operator $\times$
\begin{align*}
s
&\triangleq
\begin{bmatrix}
a_s \\ b_s \\ c_s
\end{bmatrix}
&
s\times
&\triangleq
\begin{bmatrix}
0    & -c_s & b_s  \\
c_s  & 0    & -a_s \\
-b_s & a_s  & 0
\end{bmatrix}
\end{align*}

Implementing this and concluding our function[fn:fullsource]:
#+begin_src matlab :exports code :tangle rotmat2axisangle.m :eval never
    s = [sx(3, 2); -sx(3, 1); sx(2, 1)];
end
#+end_src

[fn:thetapos] Note we choose to assume $\theta > 0$, since $e^{(-\theta)(s\times)} = e^{(\theta)(-s\times)}$





[fn:fullsource] The contiguous source code without explanation can be found in Appendix [[appendix:source]]





*** Answer Checking
Running our function on some examples:
#+begin_src matlab :session :exports both :results code output
for i = 1:3
    % Create a random axis
    s_in = rand(3, 1) - 0.5;
    % axis needs to have unit length
    s_in = s_in/norm(s_in);
    sx_in = [0 -s_in(3) s_in(2); s_in(3) 0 -s_in(1); -s_in(2) s_in(1) 0];

    % angles greater than 180 degrees are equivalent to negative rotations.
    % constrain the input angles to 180 degrees to make comparisons easier
    theta_in = rand()*pi;

    Q = expm(theta_in*sx_in)

    [s, theta] = rotmat2axisangle(Q);

    s_comp = [s, s_in]
    theta_comp = [theta, theta_in]
end
#+end_src

#+RESULTS:
#+begin_src matlab
Q =
    0.6086   -0.7737   -0.1758
    0.5214    0.5570   -0.6464
    0.5981    0.3018    0.7424
s_comp =
    0.5321    0.5321
   -0.4343   -0.4343
    0.7268    0.7268
theta_comp =
    1.0995    1.0995
Q =
    0.5874    0.1306   -0.7987
    0.6957    0.4228    0.5808
    0.4135   -0.8968    0.1575
s_comp =
   -0.7414   -0.7414
   -0.6082   -0.6082
    0.2836    0.2836
theta_comp =
    1.4869    1.4869
Q =
    0.0277   -0.6349    0.7721
   -0.1827    0.7561    0.6284
   -0.9828   -0.1585   -0.0950
s_comp =
   -0.3983   -0.3983
    0.8882    0.8882
    0.2289    0.2289
theta_comp =
    1.7270    1.7270
#+end_src

* Exercise 3
Consider a three link 3-DOF planar manipulator, where $l_1 > l_2 > l_3$ and the rotation angles $\theta_1$, $\theta_2$, and $\theta_3$ are unconstrained.
Find the reachable and dextrous workspaces.

** Solution
For simplicity, all coordinates will be specified in the base frame.
In this case, the end effector position is given by:

\begin{equation*}
d
=
l_1
\begin{bmatrix}
\cos{\theta_1} \\ \sin{\theta_1}
\end{bmatrix}
+
l_2
\begin{bmatrix}
\cos{\theta_2} \\ \sin{\theta_2}
\end{bmatrix}
+
l_3
\begin{bmatrix}
\cos{\theta_3} \\ \sin{\theta_3}
\end{bmatrix}
\end{equation*}

*** Reachable Workspace
<<sec:reachable>>

Note that the magnitude of each vector term in the above equation is equal to 1:
\begin{equation*}
\left\|
\begin{bmatrix}
\cos{\theta} \\ \sin{\theta}
\end{bmatrix}
\right\|
=
\sqrt{
    \cos^2{\theta} + \sin^2{\theta}
}
=
\sqrt{1}
=
1
\end{equation*}

Intuitively the arm is at the max extent of the manipulator is when all links are parallel ($\theta_1 = \theta_2 = \theta_3$), the max distance is then:
\begin{align*}
r_{r_\text{max}}
\triangleq
\max{\|d\|}
\triangleq
l_1 + l_2 + l_3
\end{align*}

Note that this result is independent of any particular values for $\theta_1$, meaning the max reachable distance is $r_{r_\text{max}}$ for any value of $\theta_1$

Therefore, the outer boundary of the reachable workspace is the circle with radius $r_{r_\text{max}}$.

This is shown graphically below (colors show workspaces of each link, manipulator workspace boundary shown in black):
\begin{center}
\begin{mpost*}
beginfig(1);
$ := 1;
% Dimensions
numeric l[];
l1 = 1in;
l2 = 0.4in;
l3 = 0.2in;
ll = l1 + l2 + l3;
% Joint locations
pair d[];
d0 = (0, 0);
d1 = d0 + (l1, 0);
d2 = d1 + (l2, 0);
d3 = d2 + (l3, 0);
%
% Reachable space of first link
draw fullcircle scaled 2(l1) dashed evenly withcolor(red);
%
% Reachable space of second link
draw fullcircle scaled 2(l2) shifted d1 dashed evenly withcolor(green);
%
% Reachable space of second link
draw fullcircle scaled 2(l3) shifted d2 dashed evenly withcolor(blue);
%
% Reachable space of whole manipulator
draw fullcircle scaled 2(ll) dashed evenly;
%
% Links
draw d0 -- d1 withcolor(red);
draw d1 -- d2 withcolor(green);
draw d2 -- d3 withcolor(blue);
label.top(btex $l_1$ etex, .3[d0, d1]);
label.top(btex $l_2$ etex, .3[d1, d2]);
label.top(btex $l_3$ etex, .5[d2, d3]);
%
% Joints
pickup pencircle scaled 4pt
drawdot d0;
drawdot d1;
drawdot d2;
label.llft(btex $o$ etex, d0);
endfig;          
\end{mpost*}
\end{center}

There is also an inner boundary of the reachable workspace dependent on the lengths of each link defined as the circle with radius $r_{r_\text{min}}$:
\begin{align*}
r_{r_\text{min}}
&\triangleq
\left\{
    \begin{array}{lr}
        0, & \text{for } \min{\|d\|} < 0 \\
        \min{\|d\|}, & \text{for } \min{\|d\|} \ge 0
    \end{array}
\right\} \\
\min{\|d\|}
&\triangleq
l_1 - l_2 - l_3
\end{align*}

Note that for the given manipulator configuration, the reachable workspace of $l_1$ is always a circle with radius $l_1$;
the reachable workspace of links $l_{2,3}$ is centered at a distance $l_1$ from the base joint.

For $l_1 > l_2 + l_3$, $r_{r_\text{min}} > 0$, and the inner boundary of the reachable workspace is a circle with radius $r_{r_\text{min}}$.

This is shown graphically below (colors show workspaces of each link, manipulator workspace boundary shown in black):
\begin{center}
\begin{mpost*}
beginfig(1);
$ := 1;
% Dimensions
numeric l[];
l1 = 1in;
l2 = 0.4in;
l3 = 0.2in;
ll = l1 - l2 - l3;
% Joint locations
pair d[];
d0 = (0, 0);
d1 = d0 + (l1, 0);
d2 = d1 - (l2, 0);
d3 = d2 - (l3, 0);
%
% Reachable space of first link
draw fullcircle scaled 2(l1) dashed evenly withcolor(red);
%
% Reachable space of second link
draw fullcircle scaled 2(l2) shifted d1 dashed evenly withcolor(green);
%
% Reachable space of second link
draw fullcircle scaled 2(l3) shifted d2 dashed evenly withcolor(blue);
%
% Reachable space of whole manipulator
draw fullcircle scaled 2(ll) dashed evenly;
%
% Links
pickup pencircle scaled 2pt;
draw d0 -- d1 withcolor(red);
pickup pencircle;
draw d1 -- d2 withcolor(green);
draw d2 -- d3 withcolor(blue);
label.top(btex $l_1$ etex, .2[d0, d1]);
label.top(btex $l_2$ etex, .3[d1, d2]);
label.top(btex $l_3$ etex, .5[d2, d3]);
%
% Joints
pickup pencircle scaled 4pt;
drawdot d0;
drawdot d1;
drawdot d2;
label.llft(btex $o$ etex, d0);
endfig;          
\end{mpost*}
\end{center}

For $l_1 \le l_2 + l_3$, there is no inner boundary since the end effector can reach the base joint.

This is shown graphically below (colors show workspaces of each link):
\begin{center}
\begin{mpost*}
beginfig(1);
$ := 1;
% Dimensions
numeric l[];
l1 = 1in;
l2 = 0.7in;
l3 = 0.5in;
ll = l1 - l2 - l3;
% Joint locations
pair d[];
d0 = (0, 0);
d1 = d0 + (l1, 0);
d2 = d1 - (l2, 0);
d3 = d2 - (l3, 0);
%
% Reachable space of first link
draw fullcircle scaled 2(l1) dashed evenly withcolor(red);
%
% Reachable space of second link
draw fullcircle scaled 2(l2) shifted d1 dashed evenly withcolor(green);
%
% Reachable space of second link
draw fullcircle scaled 2(l3) shifted d2 dashed evenly withcolor(blue);
%
% Links
pickup pencircle scaled 2pt;
draw d0 -- d1 withcolor(red);
pickup pencircle;
draw d1 -- d2 withcolor(green);
draw d2 -- d3 withcolor(blue);
label.top(btex $l_1$ etex, .5[d0, d1]);
label.top(btex $l_2$ etex, .1[d1, d2]);
label.top(btex $l_3$ etex, .3[d2, d3]);
%
% Joints
pickup pencircle scaled 4pt
drawdot d0;
drawdot d1;
drawdot d2;
label.llft(btex $o$ etex, d0);
endfig;          
\end{mpost*}
\end{center}



*** Dextrous Workspace
Let $d$ be the desired end effector position.

In base coordinates, the dextrous workspace is all positions $d$ that can be reached with arbitrary $\theta_3$.
For this to be true, the points of a circle with radius $l_3$ centered at $d$ must be within the reachable workspace of links $l_{1,2}$.

Using the same argument in Section [[sec:reachable]] for the reachable workspace of the first two links, we note that the reachable workspace of links $l_{1,2}$ is bounded between two circles with radii $l_1 - l_2$ and $l_1 + l_2$[fn:l1gl2].

All circles with radius $l_3$ that fit within this space must be centered between $l_1 - l_2 + l_3$ and $l_1 + l_2 - l_3$.

Therefore the dextrous workspace of the whole manipulator is bounded between two circles of radii $l_1 - l_2 + l_3$ and $l_1 + l_2 - l_3$.

We can prove that this space always exists by showing that a circle of radius $l_3$ always fits within the reachable workspace of the first two links.

\begin{align*}
r_{1,2r_\text{max}} &\triangleq l_1 + l_2 &
r_{1,2r_\text{min}} &\triangleq l_1 - l_2 \\
\end{align*}
\begin{align*}
2l_3
&\le
r_{1,2r_\text{max}}
-r_{1,2r_\text{min}} \\
2l_3
&\le
(l_1 + l_2)
-(l_1 - l_2) \\
2l_3 &\le 2l_2 \\
l_3 &\le l_2 \\
\end{align*}

This is shown graphically below
(boundaries of the reachable workspace for $l_{1,2}$ shown in green, blue shows all positions required for dextrous placement of end effector within reachable workspace of $l_{1,2}$, boundaries of the dextrous workspace shown in black):

\begin{center}
\begin{mpost*}
% Definitions
Pi=3.141592653589793;
vardef asin primary x = angle((1+-+x,x)) enddef;
vardef acos primary x = angle((x,1+-+x)) enddef;
vardef atan(expr t) = angle(1,t)*Pi/180 enddef;
beginfig(1);
$ := 1;
%
% Primary Dimensions
numeric l[];
l1 = 1in;
l2 = 0.4in;
l3 = 0.2in;
l12 = (l1 + l2 - l3) ++ (l3);
% Workspace limits
numeric rmin, rmax;
rmin = l1 - l2 + l3;
rmax = l1 + l2 - l3;
%
% Known joint locations
pair d[];
d0 = (0, 0);
d3 = (l1 + l2 - l3, 0);
d2 = d3 + (0, l3);
% Angles
numeric t[];
t11 = acos((l1**2 + l12**2 - l2**2)/(2(l1*l12)));
t12 = angle(d2);
t1 = t11 + t12;
% Final joint location
d1 = dir(t1) scaled l1;
%
% Workspace of first two links
draw fullcircle scaled 2(l1 - l2) dashed evenly withcolor(green);
draw fullcircle scaled 2(l1 + l2) dashed evenly withcolor(green);
%
% Workspace of last link
draw fullcircle scaled 2(l3) shifted d3 dashed evenly withcolor(blue);
%
% Dextrous workspace
draw fullcircle scaled 2(rmin) dashed evenly;
draw fullcircle scaled 2(rmax) dashed evenly;
%
% Links
draw d0 -- d1 withcolor(red);
draw d1 -- d2 withcolor(green);
pickup pencircle scaled 2pt;
draw d2 -- d3 withcolor(blue);
pickup pencircle;
label.ulft(btex $l_1$ etex, .3[d0, d1]);
label.urt(btex $l_2$ etex, .3[d1, d2]);
label.lft(btex $l_3$ etex, .5[d2, d3]);
%%
%% Joints
pickup pencircle scaled 4pt;
drawdot d0;
drawdot d1;
drawdot d2;
label.llft(btex $o$ etex, d0);
endfig;          
\end{mpost*}
\end{center}


When $l_1 \le l_2 + l_3$, we can also show that:
\begin{align*}
l_1 &\le l_2 + l_3 \\
l_1 - l_2 &\le l_3 \\
r_{1,2r_\text{min}} &\le l_3 
\end{align*}

This means that the points of a circle with radius $l_3$ can fit around the inner boundary of the dextrous space of the first two links[fn:l3smallerthanl1plusl2].
In this case, there is another circular reigion of dextrous workspace centered around the base joint with radius $l_2 + l_3 - l_1$.

This is shown graphically below
(boundaries of the reachable workspace for $l_{1,2}$ shown in green, blue shows all positions required for dextrous placement of end effector within reachable workspace of $l_{1,2}$, boundary of the inner dextrous workspace shown in black):

\begin{center}
\begin{mpost*}
beginfig(1);
$ := 1;
% Dimensions
numeric l[];
l1 = 1in;
l2 = 0.8in;
l3 = 0.6in;
% Joint locations
pair d[];
d0 = (0, 0);
d1 = d0 + (l1, 0);
d2 = d1 - (l2, 0);
d3 = d2 - (l3, 0);
%
% Reachable space of first two links
draw fullcircle scaled 2(l1 + l2) dashed evenly withcolor(green);
draw fullcircle scaled 2(l1 - l2) dashed evenly withcolor(green);
%
% Workspace of last link
draw fullcircle scaled 2(l3) shifted d3 dashed evenly withcolor(blue);
%
% Inner dextrous space of whole manipulator
draw fullcircle scaled 2(l2 + l3 - l1) dashed evenly;
%
% Links
pickup pencircle scaled 2pt;
draw d0 -- d1 withcolor(red);
pickup pencircle;
draw d1 -- d2 withcolor(green);
draw d2 -- d3 withcolor(blue);
label.top(btex $l_1$ etex, .1[d0, d1]);
label.top(btex $l_2$ etex, .3[d1, d2]);
label.top(btex $l_3$ etex, .7[d2, d3]);
%
% Joints
pickup pencircle scaled 4pt;
drawdot d0;
drawdot d1;
drawdot d2;
label.llft(btex $o$ etex, d0);
endfig;          
\end{mpost*}
\end{center}








[fn:l1gl2] Because we are given $l_1 > l_2$ the inner boundary must always exist.




[fn:l3smallerthanl1plusl2] Note that $l_3$ is always smaller than $r_{1,2r_\text{max}}$ since $l_3 < l_2$


* Exercise 4
Find on the web videos or images of:

- Baxter from Rethink Robotics
- Cat 215B excavator
- Asimo walking

Draw a schematic representation of one of Baxter's arms, the CAT215 arm and cab, and Asimo's right leg using our conventions for joints (dimensions not required).

** Solution
*** Baxter
Image source:
https://cdn.arstechnica.net/wp-content/uploads/2014/06/main2.jpg

[[file:baxter.png]]
  

*** CAT215B
Image source:
https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Caterpillar_215C_LC.jpg/1200px-Caterpillar_215C_LC.jpg

Note that this is a CAT 215C LC, but for the purposes of this exercise they are identical.

[[file:cat215.png]]

*** Asimo
Image source:
https://global.honda/content/dam/site/global/newsroom/cq_img/news/2001/c011112/01.jpg

Note that the drawing is of Asimo's left leg, not their right as specified by the question.
This is just because the left leg is more prominently featured in the image and makes the drawing easier.
The left and right legs are symmetrical.

[[file:asimo.png]]

\appendix
* ~rotmat2axisangle.m~
<<appendix:source>>

#+INCLUDE: "./rotmat2axisangle.m" src matlab
